// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TypeDefine.proto

#include "TypeDefine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_TypeDefine_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_TypeDefine_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_TypeDefine_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_TypeDefine_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_TypeDefine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020TypeDefine.proto*1\n\tCONN_TYPE\022\016\n\nCONN_"
  "UNUSE\020\000\022\n\n\006SERIAL\020\001\022\010\n\004WIFI\020\002*y\n\007GunType"
  "\022\t\n\005NOGUN\020\000\022\t\n\005RIFLE\020\001\022\n\n\006PISTOL\020\002\022\n\n\006GR"
  "ENAD\020\004\022\n\n\006MORTAR\020\010\022\t\n\005MINES\020\020\022\n\n\006SNIPER\020"
  " \022\014\n\010LAUNCHER\020@\022\017\n\nSUBMACHINE\020\200\001*}\n\013PERS"
  "ON_PART\022\010\n\004FREE\020\000\022\010\n\004HEAD\020\001\022\t\n\005CHEST\020\002\022\013"
  "\n\007ABDOMEN\020\003\022\010\n\004BACK\020\004\022\014\n\010LEFT_ARM\020\005\022\r\n\tR"
  "IGHT_ARM\020\006\022\014\n\010LEFT_LEG\020\007\022\r\n\tRIGHT_LEG\020\010*"
  "+\n\013Weapon_Type\022\n\n\006UNLINK\020\000\022\006\n\002OK\020\001\022\010\n\004LO"
  "CK\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_TypeDefine_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_TypeDefine_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_TypeDefine_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TypeDefine_2eproto = {
  false, false, descriptor_table_protodef_TypeDefine_2eproto, "TypeDefine.proto", 372,
  &descriptor_table_TypeDefine_2eproto_once, descriptor_table_TypeDefine_2eproto_sccs, descriptor_table_TypeDefine_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_TypeDefine_2eproto::offsets,
  file_level_metadata_TypeDefine_2eproto, 0, file_level_enum_descriptors_TypeDefine_2eproto, file_level_service_descriptors_TypeDefine_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_TypeDefine_2eproto(&descriptor_table_TypeDefine_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CONN_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TypeDefine_2eproto);
  return file_level_enum_descriptors_TypeDefine_2eproto[0];
}
bool CONN_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GunType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TypeDefine_2eproto);
  return file_level_enum_descriptors_TypeDefine_2eproto[1];
}
bool GunType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PERSON_PART_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TypeDefine_2eproto);
  return file_level_enum_descriptors_TypeDefine_2eproto[2];
}
bool PERSON_PART_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Weapon_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TypeDefine_2eproto);
  return file_level_enum_descriptors_TypeDefine_2eproto[3];
}
bool Weapon_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
